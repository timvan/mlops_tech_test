[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]

[tool]

[tool.black]
line-length = 120
target-version = ["py310"]

[tool.coverage.report]
exclude_lines = [
]
fail_under = 80
show_missing = true

[tool.coverage.run]
branch = true
omit = [
    "tests/*"
]

[tool.isort]
combine_as_imports = "true"
force_grid_wrap = 0
include_trailing_comma = "true"
known_first_party = "src"
line_length = 120
multi_line_output = 3

[tool.mypy]
disallow_untyped_defs = true
follow_imports = "silent"
ignore_missing_imports = true
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true

[tool.poetry]
authors = ["timv <timvanellemeet@gmail.com>"]
description = ""
name = "mlops_tech_test"
packages = [{include = "src"}]
readme = "README.md"
version = "0.1.0"

[tool.poetry.dependencies]
fsspec = "^2023.5.0"
gcsfs = "^2023.5.0"
ipykernel = "^6.23.0"
pandas = "^2.0.1"
python = "~3.10"
scikit-learn = "^1.2.2"
scipy = "^1.10.1"
seaborn = "^0.12.2"
xgboost = "^1.7.5"

[tool.poetry.group.dev.dependencies]
black = "^22.10.0"
flake8 = "^5.0.4"
isort = "^5.10.1"
mypy = "^0.982"
pylint = "^2.15.5"
pytest = "^7.2.0"
pytest-cov = "^4.0.0"
toml-sort = "^0.20.1"

[tool.poetry.scripts]
predict = "src.predict:predict"
train = "src.train:train"

[tool.pylint.DESIGN]
max-args = 5
max-attributes = 8
min-public-methods = 1

[tool.pylint.FORMAT]
max-line-length = 120

[tool.pylint."MESSAGES CONTROL"]
disable = "missing-docstring, line-too-long, logging-fstring-interpolation, duplicate-code"

[tool.pylint.MISCELLANEOUS]
notes = "XXX"

[tool.pylint.SIMILARITIES]
ignore-comments = "yes"
ignore-docstrings = "yes"
ignore-imports = "yes"
min-similarity-lines = 6

[tool.pytest.ini_options]
addopts = "-v --cov=src --cov-report term-missing --no-cov-on-fail"
testpaths = ["tests"]
